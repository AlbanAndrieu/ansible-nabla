---
#This script is used to configure your workstation (for developer)

#ansible-playbook -i playbooks/hosts-albandri-test -v playbooks/workstation.yml --limit albandrieu -vvvv | tee setup.log

- hosts: all
  gather_facts: true
  gather_subset: hardware
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"

- hosts: RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:Ubuntu-19*:Ubuntu-18*:Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
  gather_facts: false
  tasks:
    - name: group hosts for supported distributions
      group_by: key="supported"

- hosts: "!supported"
  gather_facts: false
  tasks:
    - name: fail for unsupported distribution
      fail: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}
                 is not a supported OS for a Tower installation.  Supported
                 OSes include Red Hat Enterprise Linux 6/7, CentOS 6/7, or
                 Ubuntu 12.04/13.04/14.04/16.04/17.04/18.04/19.04/19.04."
    - debug: msg="Version {{ ansible_distribution }} {{ ansible_distribution_version }} {{ ansible_architecture }}"

#- import_playbook: jenkins-full.yml workstation_enabled=true automount_enabled=true nis_enabled=true

- import_playbook: maven.yml

- name: Apply common configuration to all jenkins slaves
  hosts: workstation
  remote_user: albandri
#  connection: local
  become: true

  roles:
    - alban.andrieu.workstation

  vars:
       dropbox_user_directory: "/workspace/Dropbox"
       dropbox_user_host: "2366450895"
       dash_enabled: no
       webapps_enabled: no
       ansigenome_enabled: no
       apache_create_vhosts: no
       nodejs_enabled: false
       variety_owner: "{{ user }}"
       variety_group: "{{ group }}"
       dropbox_owner: "{{ user }}"
       dropbox_group: "{{ group }}"

- import_playbook: chrome.yml

- name: Install virtualbox
  hosts: virtualbox
  become: true

  roles:
    - alban.andrieu.virtualbox

  vars:
      virtualbox_version: "5.1.30"
      virtualbox_package_name: virtualbox

- name: Install vagrant
  hosts: vagrant
  become: true
  ignore_errors: true

  roles:
    - vagrant

  vars:
      vagrant_version: "2.0.0"
      vagrant_url: "https://releases.hashicorp.com/vagrant/{{ vagrant_version }}/vagrant_{{ vagrant_version }}_x86_64.deb"

- name: Install locale
  hosts: locale

  roles:
    - locale

- name: Install css
  hosts: css

  roles:
    - alban.andrieu.css

  vars:
#      ruby_version: "2.3.1"
      ruby_version: ""

- import_playbook: webmin.yml

#- import_playbook: jenkins-master.yml

- name: Apply solaris configuration to all nodes
  hosts: workstation
  gather_facts: false
  become: true

  roles:
    - alban.andrieu.solaris

  vars:
    size: 2

#- name: Register slaves to master
#  hosts: jenkins-swarm
#
#  roles:
#    - alban.andrieu.jenkins-swarm
#
#  vars:
#    jenkins_slave_home: /kgr-mvn
##    jenkins_slave_home: /kgr-mvn/Jenkins-slave/
#    jenkins_slave_name: hostname0
#    #jenkins_home: /jenkins
#    jenkins_home: /data1/workspace/users/jenkins
#    #jenkins_target_home: "/{{jenkins_target_user}}"
#    jenkins_remote_username: admin
#    jenkins_remote_password: admin
#    jenkins_url: http://10.41.40.139:8380/jenkins
#    jenkins_swarm_client_url: "http://FR1CSLFRBM0059.misys.global.ad/download/jenkins/"
#    #jenkins_swarm_labels: "java java-medium java-small {{ ansible_os_family }}-{{ ansible_distribution_major_version }}-{{ ansible_distribution_version }}-{{ ansible_architecture }} kgrdb01"

# This playbook deploys a simple standalone Tomcat 7 server.
- name: deploy Tomcat
  hosts: tomcat-servers

  roles:
    - alban.andrieu.tomcat

  vars:
      tomcat_version: "8"

- name: Install samba
  hosts: workstation

  roles:
    - geerlingguy.samba

#- name: Install packer
#  hosts: workstation
#
#  roles:
#    - geerlingguy.packer

- name: Install terraform
  hosts: workstation

  roles:
    - andrewrothstein.terraform

- import_playbook: kubernetes.yml

#- import_playbook: collectd.yml

#- name: Install certbot
#  hosts: workstation
#
#  roles:
#    - geerlingguy.certbot

#- name: Install certbot
#  hosts: workstation
#  become: true
#
#  roles:
#    - geerlingguy.clamav
