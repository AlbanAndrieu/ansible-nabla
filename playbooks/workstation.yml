
#for testing purpose
#ansible-playbook -i hosts-albandri -c local -v workstation.yml --limit localhost -vvvv --ask-sudo-pass | tee setup.log

#as root
#ansible-playbook workstation.yml -i hosts-albandri --limit localhost -vvvv
#as albandri
#ansible-playbook workstation.yml -i hosts-albandri --limit localhost -vvvv --ask-sudo-pass --sudo
# --extra-vars "jenkins_username=aandrieu jenkins_password=tbd"

- hosts: all
  gather_facts: true
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"

- hosts: RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:Ubuntu-12*:Ubuntu-13*:Ubuntu-14*:Ubuntu-16*:Ubuntu-17*
  gather_facts: false
  tasks:
    - name: group hosts for supported distributions
      group_by: key="supported"

- hosts: "!supported"
  gather_facts: false
  tasks:
    - name: fail for unsupported distribution
      fail: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}
                 is not a supported OS for a Tower installation.  Supported
                 OSes include Red Hat Enterprise Linux 5/6/7, CentOS 6/7, or
                 Ubuntu 12.04/13.04/14.04/16.04/17.04."
    - debug: msg="Version {{ ansible_distribution }} {{ ansible_distribution_version }} {{ ansible_architecture }}"

- hosts: localhost

  tasks:
    - name: Install Ansible-Galaxy dependencies
      shell: ansible-galaxy install -r requirements.yml -p ./roles/
      #shell: ansible-galaxy install -r requirements.yml -p ./roles/ --ignore-errors --force
      ignore_errors: yes

#Below is too make sure we can ssh all required hosts
- name: determine ssh port
  hosts: all
  gather_facts: false

  vars:
    custom_ssh_port: 23

  tasks:
    - name: test default ssh port
      local_action: wait_for port=22 timeout=5 host={{inventory_hostname}}
      register: default_ssh
      ignore_errors: true
      check_mode: no
    - name: set ansible_ssh_port to default
      set_fact: ansible_ssh_port=22
      when: default_ssh.elapsed < 5
    - name: test ssh on high port
      local_action: wait_for port={{custom_ssh_port}} timeout=5 host={{inventory_hostname}}
      register: high_ssh
      when: default_ssh.elapsed >= 5
      ignore_errors: true
    - name: set ansible_ssh_port high
      set_fact: ansible_ssh_port={{custom_ssh_port}}
      when: default_ssh.elapsed >= 5 and high_ssh.elapsed < 5

#TODO ansible myhost --sudo -m raw -a "yum install -y python2 python-simplejson"

- name: Bootstrap python onto server
  hosts: Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
#  become: yes

  pre_tasks:
  - name: Install python 2 if not there
    raw: |
      test -e /usr/bin/python || \
      (apt -y update && apt install -y python-simplejson)
    register: output
    changed_when: output.stdout|trim() != ""

  - name: Install sudo if not there
    become: yes
    raw: |
      test -e /usr/bin/sudo || apt install -y sudo
    register: output
    changed_when: output.stdout|trim() != ""

- name: Add repo configuration to all nodes
  hosts: RedHat-7*:RedHat-6*:CentOS-7*:CentOS-6*
  become: yes

  roles:
    - geerlingguy.repo-epel
    - geerlingguy.repo-remi

- name: Apply hostname configuration
  hosts: workstation
  become: yes

  roles:
    - alban.andrieu.hostname

- name: Install git
  hosts: workstation
  remote_user: root

  roles:
    - role: geerlingguy.git

- name: Apply common configuration to all jenkins slaves
  hosts: workstation
  remote_user: albandri
  connection: local

  roles:
    - alban.andrieu.workstation

  vars:
       dropbox_user_directory: "/workspace/Dropbox"
       dropbox_user_host: "2366450895"
       dash_enabled: no
       webapps_enabled: no
       ansigenome_enabled: no
       apache_create_vhosts: no
       nodejs_enabled: false
       variety_owner: "{{ user }}"
       variety_group: "{{ group }}"
       dropbox_owner: "{{ user }}"
       dropbox_group: "{{ group }}"

#- name: Apply swarm configuration to all jenkins slaves
#  hosts: test-boxes
#  sudo: yes
#  remote_user: vagrant
#  connection: local
##  remote_user: vagrant
#
#  vars_prompt:
#  - name: jenkins_username
#    prompt: "What is your jenkins user?"
#    private: no
#  - name: jenkins_password
#    prompt: "What is your jenkins password?"
#    private: yes
#
#  roles:
#    - alban.andrieu.jenkins-swarm
#
#  vars:
#    jenkins_home: "/jenkins"

- name: Install xvbf
  hosts: workstation
  remote_user: root

  roles:
    - alban.andrieu.xvbf

- name: Install samba
  hosts: workstation

  roles:
    - geerlingguy.samba
