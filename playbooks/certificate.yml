#ansible-playbook -i hosts-albandri -v certificate.yml -c local --limit albandri-laptop-work --ask-sudo-pass -vvvv | tee setup.log

- hosts: all
  gather_facts: true
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"

- hosts: RedHat-7*:RedHat-6*:RedHat-5*:CentOS-6*:Ubuntu-12*:Ubuntu-13*:Ubuntu-14*:Ubuntu-16*:Ubuntu-17*:MacOSX-10.12*
  gather_facts: false
  tasks:
    - name: group hosts for supported distributions
      group_by: key="supported"

- hosts: "!supported"
  gather_facts: false
  tasks:
    - name: fail for unsupported distribution
      fail: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}
                 is not a supported OS for a Tower installation.  Supported
                 OSes include Red Hat Enterprise Linux 6/7, CentOS 6, or
                 Ubuntu 12.04/14.04/16.04/17.04."
    - debug: msg="Version {{ ansible_distribution }} {{ ansible_distribution_version }} {{ ansible_architecture }}"

- hosts: workstation
  remote_user: albandri

  pre_tasks:

    #- name: Create private key
    #  shell: ssh-keygen -t rsa -C "alban.andrieu@free.fr"
    #  ignore_errors: yes
    #  become: yes
    #  become_user: albandri

    - name: Create ~/pki
      file: path=~/pki/ state=directory mode=0700
      become: yes
      become_user: root

    #- name: Get the CA root certificate
    #  get_url: dest=~/pki/ca.pem url=http://home.nabla.mobi:7072/download/certs/NABLA.crt
    #  ignore_errors: yes
    #  become: yes
    #  become_user: root

    - name: Get the server DER certificate
      get_url: dest=~/pki/{{ansible_fqdn}}-der.cer url=http://home.nabla.mobi:7072/download/certs/servers/{{ansible_fqdn}}-der.cer
      ignore_errors: yes
      become: yes

    - name: Convert DER certificate to PEM
      command: openssl x509 -inform DER -outform PEM -in ~/pki/{{ansible_fqdn}}-der.cer -out /etc/ssl/{{ansible_fqdn}}/{{ansible_fqdn}}.pem
      ignore_errors: yes
      become: yes

    - name: Get the Docker root certificate
      #get_url: dest=~/docker.pem url=http://home.nabla.mobi:7072/download/certs/docker.crt
      shell: 'openssl s_client -showcerts -connect registry.nabla.mobi:443 </dev/null 2>/dev/null |openssl x509 -outform PEM | tee ~/pki/registry.pem'
      ignore_errors: yes
      become: yes
      become_user: root

    - name: Get the nabla root certificate
      shell: 'openssl s_client -showcerts -connect nabla.freeboxos.fr:20726 </dev/null 2>/dev/null |openssl x509 -outform PEM | tee ~/nabla.freeboxos.fr.pem'
      become: yes
      become_user: root

- name: Install CA root certificate
  hosts: workstation
  become: yes
  remote_user: albandri
  ignore_errors: yes

  roles:
    - role: ssl.ca-certificate
      trust_ca_pki_dir: '~/pki'

- name: Install Docker CA root certificate
  hosts: workstation
  become: yes
  remote_user: albandri
  ignore_errors: yes

#See /root/pki/docker.pem
  roles:
    - role: ssl.ca-certificate
      trust_ca_pki_dir: '~/pki'
      trust_ca_pki_prefix: 'registry'
      trust_ca_cert_prefix: 'registry'

#TODO secure docker https://docs.docker.com/engine/security/https/
#mkdir -pv ~/.docker
#cp -v {ca,registry,cert,key}.pem ~/.docker
#docker --tlsverify ps

- hosts: docker
#  remote_user: root

  tasks:
    - name: Create .docker
      file: path=~/.docker state=directory mode=0700
      become: yes
      become_user: root

    - name: Create registry.misys.global.ad
      file: path=/etc/docker/certs.d/registry.nabla.mobi/ state=directory mode=0700
      become: yes
      become_user: root

    - name: Copy ca and docker registry pem crt
      copy:
        src: ~/pki/registry.pem
        dest: "{{ item }}"
        remote_src: yes
      with_items:
        - ~/.docker/ca.pem
        - /etc/docker/certs.d/registry.nabla.mobi/ca.pem
      become: yes
      become_user: root

- name: Install server certificate
  hosts: workstation
  remote_user: albandri
  become: yes

  roles:
    - role: ssl.certificate
      ssl_certs_country: "FR"
      ssl_certs_locality: "Paris"
      ssl_certs_organization: "Nabla"
      ssl_certs_state: "Ile de France"
      #ssl_certs_common_name: "{{ansible_fqdn}}"
      ssl_certs_common_name: "nabla.freeboxos.fr"
      ssl_certs_days: "365"
      #ssl_certs_fields: "/C={{ssl_certs_country}}/ST={{ssl_certs_state}}/L={{ssl_certs_locality}}/O={{ssl_certs_organization}}/CN={{ssl_certs_common_name}}"
      ssl_certs_fields: "/C={{ssl_certs_country}}/ST={{ssl_certs_state}}/L={{ssl_certs_locality}}/O={{ssl_certs_organization}}/CN={{ssl_certs_common_name}}/emailAddress=alban.andrieu@fre.fr/subjectAltName=DNS.1={{ssl_certs_common_name}},DNS.2=nabla.mobi,DNS.3=localhost"
      #ssl_certs_path_owner: "root"
      #ssl_certs_path_group: "root"
      ssl_certs_mode: 700

- name: Install java certificate for java 7 and 8
  hosts: workstation
  remote_user: albandri
  become: yes

  roles:
#    - role: java.certificate
#      java_certificate_host: mail.google.com
#      java_certificate_port: 443

#    - role: java.certificate
#      java_certificate_host: nbala.freeboxos.fr
#      java_certificate_port: 443
#
#    - role: java.certificate
#      java_certificate_host: home.nabla.mobi
#      java_certificate_port: 443

#sonar
#    - role: java.certificate
#      java_certificate_host: home.nabla.mobi
#      java_certificate_port: 8999

    - role: java.certificate
      java_certificate_host: google.com
      java_certificate_port: 443

    - role: java.certificate
      java_certificate_host: github.com
      java_certificate_port: 443

#Default standard oracle java 8
    - role: java.certificate
      ignore_errors: yes
      java_path: "/usr/lib/jvm/java-8-oracle/"
      java_certificate_host: google.com
      java_certificate_port: 443

    - role: java.certificate
      ignore_errors: yes
      java_path: "/usr/lib/jvm/java-8-oracle/"
      java_certificate_host: github.com
      java_certificate_port: 443

#Default standard oracle java 7
    - role: java.certificate
      ignore_errors: yes
      java_path: "/usr/lib/jvm/java-7-oracle/"
      java_certificate_host: google.com
      java_certificate_port: 443

    - role: java.certificate
      ignore_errors: yes
      java_path: "/usr/lib/jvm/java-7-oracle/"
      java_certificate_host: github.com
      java_certificate_port: 443

#Dependency check
    - role: java.certificate
      ignore_errors: yes
      java_path: "/usr/lib/jvm/java-8-oracle/"
      java_certificate_host: api.nodesecurity.io
      java_certificate_port: 443
