#ansible-galaxy install -r requirements.yml -p ./roles/ --ignore-errors
#ansible-playbook -i hosts -v docker.yml --limit albandri --ask-sudo-pass -vvvv | tee setup.log

- hosts: all
  gather_facts: true
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"

- hosts: RedHat-7*:RedHat-6*:CentOS-6*:Ubuntu-12*:Ubuntu-13*:Ubuntu-14*:Ubuntu-16*:Ubuntu-17*
  gather_facts: false
  tasks:
    - name: group hosts for supported distributions
      group_by: key="supported"

- hosts: "!supported"
  gather_facts: false
  tasks:
    - name: fail for unsupported distribution
      fail: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}
                 is not a supported OS for a Tower installation.  Supported
                 OSes include Red Hat Enterprise Linux 6/7, CentOS 6, or
                 Ubuntu 12.04/14.04/16.04/17.04."
    - debug: msg="Version {{ ansible_distribution }} {{ ansible_distribution_version }} {{ ansible_architecture }}"                 

- include: certificate.yml

- hosts: docker
  become: yes
#  pre_tasks:
#  - name: Log into DockerHub
#    docker_login:
#      username: nabla
#      password: todo
#      email: alban.andrieu@free.fr

#https://askubuntu.com/questions/477551/how-can-i-use-docker-without-sudo
#sudo groupadd docker
#sudo gpasswd -a ${USER} docker
#sudo gpasswd -a jenkins docker
  pre_tasks:
    - name: Create a docker group
      group:
          name=docker
          state=present
      become: yes

    - name: Add user(s) to docker group
      user:
          name="{{ lookup('env','USER') }}"
          group=docker
          state=present
      become: yes

- name: Install docker
  hosts: docker
  become: yes

  roles:
    - docker

  vars:
#       docker_opts: "-H tcp://127.0.0.1:4243 -H unix:///var/run/docker.sock --dns 8.8.8.8 --dns 8.8.4.4 --storage-driver=zfs"
#       docker_opts: "-H tcp://127.0.0.1:4243 -H unix:///var/run/docker.sock --dns 8.8.8.8 --dns 8.8.4.4 --storage-driver=overlay"
       docker_opts: "-H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock --dns 10.25.200.3 --dns 8.8.8.8 --dns 8.8.4.4 --storage-driver overlay --disable-legacy-registry --tlsverify --tlscacert /root/ca.pem --tlscert /etc/ssl/{{ansible_fqdn}}/{{ansible_fqdn}}.pem --tlskey /etc/ssl/{{ansible_fqdn}}/{{ansible_fqdn}}.key --label provider=albandri"
       #--insecure-registry docker:443       
       #TODO add 
       #--userns-remap=default #see https://stackoverflow.com/questions/35291520/docker-and-userns-remap-how-to-manage-volume-permissions-to-share-data-betwee
       #--tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=amazonec2
       #pip_version_docker_py: 1.9.0 #Fix issue with https://github.com/angstwad/docker.ubuntu/issues/109#issuecomment-257706232
       #pip_version_docker: latest
       pip_version_docker: 2.2.1
       #pip_version_docker_compose: 1.9.0
       #pip_version_docker_compose: latest
       pip_version_docker_compose: 1.12.0
       # TypeError: create_network() got an unexpected keyword argument 'enable_ipv6' with pip_version_docker_py: 1.9.0
       #Please upgrade to 1.10.6
       pip_install_docker_py: false

#https://stackoverflow.com/questions/37178824/how-to-find-docker-rest-api-url
#curl -X GET http://10.25.40.139:4243/images/json
#curl --unix-socket /var/run/docker.sock http:127.0.0.1:4243/version
#curl --unix-socket /var/run/docker.sock tcp:10.25.40.139:4243/version
#curl 10.25.40.139:4243/version

#TODO restart docker after installing docker CA
#sudo service docker start

#sudo docker logout https://docker:5000
#sudo docker login docker.nabla.mobi --username=albandri --email=albandri@nabla.mobi

#- hosts: docker
#  become: yes
#
#  post_tasks:
#    - name: Log into private registry and force re-authorization
#      docker_login:
#        registry: https://docker.nabla.mobi/
#        username: test
#        password: Microsoft
#        reauthorize: yes

#    - name: Inspect multiple images
#      docker_image_facts:
#        name:
#          - nabla/java
