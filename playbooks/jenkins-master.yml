---
# ansible-playbook -i inventory/hosts-albandri -c local -v playbooks/jenkins-master.yml --ask-become-pass -vvvv | tee setup.log

- import_playbook: hostname.yml

- import_playbook: python.yml

- import_playbook: administration.yml

- import_playbook: java.yml

- import_playbook: certificate.yml

- name: Apply configuration to jenkins master
  hosts: jenkins-master

  roles:
    - jenkins-master

  vars:
      docker_files_enable: true
      docker_files_generated_directory: "../roles/jenkins-master"
      jenkins_proxy: apache
      jenkins_user: jenkins
      jenkins_version: 2.204.3
      jenkins_proxy_hostname: localhost
#      jenkins_ssh_key_file: "{{resources_to}}/resources/jenkins/ssh_key"    # (you can manage remote files with Stouts.resources role)
      jenkins_ssh_key_file: "~/.ssh/id_rsa"
      jenkins_http_port: 8686
      jenkins_http_host: "{{ ansible_fqdn }}"
      #jenkins_proxy_port: 7070
      jenkins_proxy_ssl: true
      jenkins_proxy_ssl_certificate: "{{ jenkins_http_host }}.cer"
      jenkins_proxy_ssl_key: "/etc/ssl/{{ jenkins_http_host }}/almonde-jenkins.key"
      jenkins_home: /jenkins
      jenkins_target_home: /jenkins
      jenkins_maxopenfiles: 65535
      #See jenkins tuning https://jenkins.io/blog/2016/11/21/gc-tuning/?utm_source=feedburner&utm_medium=twitter&utm_campaign=Feed%3A+ContinuousBlog+%28Jenkins%29
      #-Xmx8096m -XX:MaxPermSize=2048m -Djava.awt.headless=true -Djava.util.Arrays.useLegacyMergeSort=true -Dhudson.slaves.WorkspaceList=-
      jenkins_java_args:
#        - "-Xms8096m -Xmx16192m"
        - "-Djava.awt.headless=true"
        - "-Djenkins.install.runSetupWizard=false"
#0        - "-Xloggc:$JENKINS_HOME/gc-%t.log -XX:NumberOfGCLogFiles=5 -XX:+UseGCLogFileRotation -XX:GCLogFileSize=20m -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCCause -XX:+PrintTenuringDistribution -XX:+PrintReferenceGC -XX:+PrintAdaptiveSizePolicy" #GC Logging
        - "-server -XX:+AlwaysPreTouch"
        #- "-Dorg.jenkinsci.plugins.durabletask.BourneShellScript.LAUNCH_DIAGNOSTICS=true" # To enable for debug
        #- "-Dorg.jenkinsci.plugins.durabletask.BourneShellScript.FORCE_SHELL_WRAPPER=true" # To enable for debug
        #- "-Dorg.jenkinsci.plugins.durabletask.BourneShellScript.FORCE_BINARY_WRAPPER=true" # To enable for debug
        - "-Dorg.jenkinsci.plugins.gitclient.Git.timeOut=120" #For robot framework
        - "-Dhudson.model.DirectoryBrowserSupport.CSP=\"\""
#        - "-Dhudson.slaves.WorkspaceList=_"
#        - "-Dpermissive-script-security.enabled=true"
#below is default for secure jenkins
#      - "--httpPort=-1 --httpsPort=8383 --httpsKeyStore=/etc/ssl/{{ jenkins_http_host }}/{{ jenkins_http_host }}.jks --httpsKeyStorePassword=changeit"
#        - "-Dhudson.model.ParametersAction.keepUndefinedParameters=false"
#1        - "-XX:-BytecodeVerificationLocal -XX:-BytecodeVerificationRemote -XX:+ReduceSignalUsage -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:-UseLargePagesIndividualAllocation"
#2        - "-XX:+UseG1GC -XX:+UseCompressedClassPointers -XX:+UseCompressedOops"
#3        - "-XX:+UseG1GC -XX:+AlwaysPreTouch -XX:+UseStringDeduplication -XX:+UseCompressedClassPointers -XX:+UseCompressedOops"
#4        - "-XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent -XX:+ParallelRefProcEnabled -XX:+UseStringDeduplication -XX:+UnlockExperimentalVMOptions -XX:G1NewSizePercent=20 -XX:+UnlockDiagnosticVMOptions -XX:G1SummarizeRSetStatsPeriod=1" #G1 GC settings
        - "-Dhudson.plugins.git.GitSCM.verbose=true"
#        - "-Dorg.jenkinsci.plugins.docker.workflow.client.DockerClient.CLIENT_TIMEOUT=240" #JAVA_OPTS
      jenkins_prefix: "/jenkins"
      jenkins_system_config:
        admin_email: alban.andrieu@free.fr
##!/usr/bin/groovy
#def pluginList = new ArrayList(Jenkins.instance.pluginManager.plugins)
#pluginList.sort { it.getShortName() }.each{
#  plugin ->
#    //println ("${plugin.getDisplayName()} (${plugin.getShortName()}): ${plugin.getVersion()}")
#  println (" - \"${plugin.getShortName()}\"")
#}
      jenkins_plugins:
        - "ace-editor"
        - "analysis-collector"
        - "analysis-core"
        - "ansible"
        - "ansicolor"
        - "antisamy-markup-formatter"
        - "apache-httpcomponents-client-4-api"
        - "aqua-security-scanner"
        - "authentication-tokens"
        - "bitbucket-approve"
        - "bitbucket-build-status-notifier"
        - "bitbucket-pullrequest-builder"
        - "blueocean"
        - "blueocean-autofavorite"
        - "blueocean-bitbucket-pipeline"
        - "blueocean-commons"
        - "blueocean-config"
        - "blueocean-core-js"
        - "blueocean-dashboard"
        - "blueocean-display-url"
        - "blueocean-events"
        - "blueocean-git-pipeline"
        - "blueocean-github-pipeline"
        - "blueocean-i18n"
        - "blueocean-jira"
        - "blueocean-jwt"
        - "blueocean-personalization"
        - "blueocean-pipeline-api-impl"
        - "blueocean-pipeline-editor"
        - "blueocean-pipeline-scm-api"
        - "blueocean-rest"
        - "blueocean-rest-impl"
        - "blueocean-web"
        - "bouncycastle-api"
        - "branch-api"
        - "build-with-parameters"
        #- "cloudbees-bitbucket-branch-source"
        - "cloudbees-folder"
        - "command-launcher"
        - "config-file-provider"
        - "credentials"
        - "credentials-binding"
        - "dependency-check-jenkins-plugin"
        - "dependency-track"
        - "display-url-api"
        - "docker-commons"
        - "docker-workflow"
        - "drmemory-plugin"
        - "durable-task"
        - "external-monitor-job"
        - "favorite"
        - "git"
        - "git-changelog"
        - "git-client"
        - "git-server"
        - "github"
        - "github-api"
        - "github-branch-source"
        - "greenballs"
        #- "groovy-events-listener-plugin"
        - "handlebars"
        - "handy-uri-templates-2-api"
        - "htmlpublisher"
        - "jackson2-api"
        - "javadoc"
        - "jdk-tool"
        - "jenkins-design-language"
        - "jira"
        - "job-import-plugin"
        - "jquery-detached"
        - "jsch"
        - "junit"
        - "ldap"
        - "locale"
        - "lockable-resources"
        - "mailer"
        - "matrix-auth"
        - "matrix-project"
        - "maven-plugin"
        - "mercurial"
        - "momentjs"
        - "multiple-scms"
        - "pam-auth"
        - "performance"
        - "periodicbackup"
        - "pipeline-build-step"
        - "pipeline-graph-analysis"
        - "pipeline-input-step"
        - "pipeline-milestone-step"
        - "pipeline-model-api"
        - "pipeline-model-declarative-agent"
        - "pipeline-model-definition"
        - "pipeline-model-extensions"
        - "pipeline-rest-api"
        - "pipeline-stage-step"
        - "pipeline-stage-tags-metadata"
        - "pipeline-stage-view"
        - "pipeline-utility-steps"
        - "plain-credentials"
        - "pubsub-light"
        - "resource-disposer"
        - "scm-api"
        - "script-security"
        - "sitemonitor"
        - "sonar-quality-gates"
        - "sse-gateway"
        - "ssh-credentials"
        - "ssh-slaves"
        - "structs"
        - "timestamper"
        - "token-macro"
        - "trilead-api"
        - "variant"
        - "whitesource"
        - "windows-slaves"
        - "workflow-aggregator"
        - "workflow-api"
        - "workflow-basic-steps"
        - "workflow-cps"
        - "workflow-cps-global-lib"
        - "workflow-durable-task-step"
        - "workflow-job"
        - "workflow-multibranch"
        - "workflow-scm-step"
        - "workflow-step-api"
        - "workflow-support"
        - "ws-cleanup"
        - "xvfb"
        - "zap"
      jenkins_disabled_plugins: [ 'versioncolumn', 'scm-sync-configuration', 'clamav', 'selenium', 'seleniumrc-plugin', 'selenium-builder', 'svnmerge', 'WebSVN2', 'svn-revert-plugin', 'subversion', 'ec2', 'scons', 'gearman-plugin', 'findbugs', 'checkstyle', 'pmd', 'clover', 'fitnesse' ]
      jenkins_jobs:
          - name: Delete_workspaces_on_nodes
            action: disable
      shell_git:
        - {
          shell_git_machine: "github.com",
          shell_git_login: "AlbanAndrieu",
          shell_git_email: "alban.andrieu@free.fr",
          shell_git_password: "microsoft",
          shell_git_name: "Andrieu, Alban",
          shell_git_path: "/usr/bin",
          shell_git_ssl: false,
          shell_git_meld_enabled: true,
          shell_git_editor: "gedit"
          }
