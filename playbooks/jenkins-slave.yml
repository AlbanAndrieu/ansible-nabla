#see https://blog.trifork.com/2013/04/02/ansible-example-playbook-to-setup-jenkins-slave/

#as albandri
#ansible-playbook playbooks/jenkins-slave.yml -i inventory/production --limit albandri.nabla.mobi -vvvv -e python2_version="2.7"
#ansible-playbook playbooks/jenkins-slave.yml -i inventory/production --limit albandri.nabla.mobi -vvvv

#ansible all -m setup -i staging --limit albandri.nabla.mobi -vvvv

#TODO ansible myhost --sudo -m raw -a "yum install -y python2 python-simplejson"

- hosts: all
  gather_facts: true
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"

- hosts: RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:Ubuntu-18*:Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
  gather_facts: false
  tasks:
    - name: group hosts for supported distributions
      group_by: key="supported"

- hosts: "!supported"
  gather_facts: false
  tasks:
    - name: fail for unsupported distribution
      fail: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}
                 is not a supported OS for a Tower installation.  Supported
                 OSes include Red Hat Enterprise Linux 6/7, CentOS 6/7, or
                 Ubuntu 12.04/13.04/14.04/16.04/17.04/18.04."
    - debug: msg="Version {{ ansible_distribution }} {{ ansible_distribution_version }} {{ ansible_architecture }}"

- hosts: localhost

  tasks:
    - name: Install Ansible-Galaxy dependencies
      shell: ansible-galaxy install -r requirements.yml -p ./roles/
      #shell: ansible-galaxy install -r requirements.yml -p ./roles/ --ignore-errors --force
      ignore_errors: true

#Below is too make sure we can ssh all required hosts
- name: determine ssh port
  hosts: all
  gather_facts: false

  vars:
    custom_ssh_port: 23

  tasks:
    - name: test default ssh port
      local_action: wait_for port=22 timeout=5 host={{inventory_hostname}}
      register: default_ssh
      ignore_errors: true
      check_mode: false
    - name: set ansible_ssh_port to default
      set_fact: ansible_ssh_port=22
      when: default_ssh.elapsed < 5
    - name: test ssh on high port
      local_action: wait_for port={{custom_ssh_port}} timeout=5 host={{inventory_hostname}}
      register: high_ssh
      when: default_ssh.elapsed >= 5
      ignore_errors: true
    - name: set ansible_ssh_port high
      set_fact: ansible_ssh_port={{custom_ssh_port}}
      when: default_ssh.elapsed >= 5 and high_ssh.elapsed < 5

- name: Bootstrap python onto server
  hosts: Ubuntu-18*:Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
  become: true

  pre_tasks:
  - name: Install python 2 if not there
    raw: |
      test -e /usr/bin/python || \
      (apt -y update && apt install -y python-simplejson)
    register: output
    changed_when: output.stdout|trim() != ""

  - name: Install sudo if not there
    become: true
    raw: |
      test -e /usr/bin/sudo || apt install -y sudo
    register: output
    changed_when: output.stdout|trim() != ""

- name: Bootstrap python onto server
  hosts: RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*
  become: true

  pre_tasks:
  - name: Install python 2 if not there
    raw: |
      test -e /usr/bin/python || \
      (yum install -y python2 python-simplejson)
    register: output
    changed_when: output.stdout|trim() != ""

- name: Add repo configuration to all nodes
  hosts: RedHat-7*:RedHat-6*:CentOS-7*:CentOS-6*
  become: true

  roles:
    - geerlingguy.repo-epel
#    - geerlingguy.repo-remi

- name: Add repo configuration to all nodes
  hosts: RedHat-6*:CentOS-6*
  become: true

  roles:
    - geerlingguy.repo-remi

- import_playbook: hostname.yml

#- name: Apply nfs configuration to all nodes
#  hosts: jenkins-slaves
#  become: true
#
#  roles:
#    - geerlingguy.nfs

- import_playbook: administration.yml

- name: Apply solaris configuration to all nodes
  hosts: jenkins-slaves
  become: true

  roles:
    - solaris

- name: Apply common configuration to all nodes
  hosts: jenkins-slaves
  become: true

  roles:
    - common

- import_playbook: dns.yml

- name: Apply security configuration
  hosts: jenkins-slaves
  become: true

  roles:
    - security

  vars:
      security_ssh_password_authentication: "yes"
      security_ssh_permit_root_login: "yes"
      security_ssh_x11_forwarding: "yes"
      security_fail2ban_enabled: false
      security_autoupdate_enabled: false #make yum to get stuck later

- import_playbook: java.yml

- import_playbook: certificate.yml

- import_playbook: maven-legacy.yml

- name: Install chrome
  hosts: jenkins-slaves
#  hosts: Ubuntu-14*:Ubuntu-16*
#  connection: local

  roles:
     - role: chrome
       google_talkplugin_enabled: false                       # Enable module
       google_agent_pkg_state: installed # Package states: present or installed or latest

- name: Install selenium
  hosts: jenkins-slaves
  become: true

  roles:
    - selenium

  vars:
    #selenium_mirror: "http://nabla.mobi/download/selenium/"
    selenium_server_major_version: "2.42"
    selenium_server_minor_version: "2"

- name: Install xvbf
  hosts: jenkins-slaves

  roles:
    - xvbf

- import_playbook: zabbix-agent.yml

- import_playbook: yarn.yml

#Only for MacOSX
#- import_playbook: brew.yml

- import_playbook: sonar-runner.yml

# TODO jenkins-slaves.yml contains some python fixes. It must be run first
#but jenkins-slaves.yml might need virtualenv and python
- import_playbook: python.yml

- import_playbook: docker.yml

- import_playbook: git-lfs.yml

- name: Configure all jenkins slaves
  hosts: jenkins-slaves
  become: true

  roles:
    - alban.andrieu.jenkins-slave

  vars:
    docker_files_enable: false
    #docker_files_generated_directory: "../roles/alban.andrieu.jenkins-slave"
    jenkins_home: /home/jenkins
    jenkins_user: jenkins
    jenkins_group: docker
    jenkins_http_port: 8380
    jenkins_slave_home: /workspace
    jenkins_prefix: "/jenkins"
    jenkins_url: http://localhost:8380{{ jenkins_prefix }}
    jenkins_slave_directory: ["{{ jenkins_slave_home }}/slave","{{ jenkins_slave_home }}/slavearc"]
    home_url: "http://home.nabla.mobi"
    nexus_url: "{{ home_url }}:8081"
    bower_url: "http://home.nabla.mobi:5678"
    npm_nexus_npm_url: "{{ nexus_url }}/nexus/content/groups/npmjs-all/"
    npm_nexus_private_npm_url: ""
    npm_nexus_private_npm_data: []
    npm_phantomjs_cdnurl: "{{ home_url }}:7070/download/phantomjs"
    npm_slimerjs_cdnurl: "{{ home_url }}:7070//download/slimerjs"
    shell_git:
      # Additional properties: 'shell_git_machine, shell_git_login, shell_git_email, shell_git_password, shell_git_name, shell_git_path, shell_git_ssl'.
       - {
         shell_git_machine: '82.231.208.223',
         shell_git_login: 'AlbanAndrieu',
         shell_git_email: 'alban.andrieu@free.fr',
         shell_git_password: 'microsoft',
         # Optional.
         shell_git_name: 'Andrieu, Alban',
         shell_git_path: '/usr/bin',
         shell_git_ssl: false
       }
    jenkins_ssh_key_file: "~/.ssh/id_rsa"
    jenkins_ssh_authorized_keys_fingerprints:   # Set known authorized keys for ssh
    # Alban Andrieu
      - "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAio3SOQ9yeK6QfKqSFNKyTasuzjStxWevG1Vz1wgJIxPF+KB0XoMAPD081J+Bzj2LCDRSWisNv2L4xv2jbFxW/Pl7NEakoX47eNx3U+Dxaf+szeWBTryYcDUGkduLV7G8Qncm0luIFd+HDIe/Qir1E2f56Qu2uuBNE6Tz5TFt1vc= Alban"
    jenkins_ssh_fingerprints: # Set known hosts for ssh
      - "bitbucket.org,131.103.20.167 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw=="
      - "github.com,204.232.175.90 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=="
    jenkins_jdk7_enable: false
    jenkins_jdk8_enable: false
    #user: "albandri"
    #home: "/workspace/users/albandri10"

- import_playbook: filebeat.yml

- import_playbook: cron.yml

- name: Configure xvbf
  hosts: jenkins-slaves
  become: true
  #connection: local

  roles:
    - alban.andrieu.xvbf
