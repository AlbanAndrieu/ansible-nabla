#see https://blog.trifork.com/2013/04/02/ansible-example-playbook-to-setup-jenkins-slave/

#for testing purpose
#ansible-playbook -i hosts-albandri -c local -v jenkins-slave.yml --limit albandri.misys.global.ad -vvvv --ask-sudo-pass | tee setup.log

#as root
#ansible-playbook jenkins-slave.yml -i hosts-albandri --limit albandri.misys.global.ad -vvvv
#as albandri
#ansible-playbook jenkins-slave.yml -i hosts-albandri --limit albandri.misys.global.ad -vvvv --ask-sudo-pass --sudo
# --extra-vars "jenkins_username=aandrieu jenkins_password=tbd"

- hosts: all
  gather_facts: true
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"

- hosts: RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:Ubuntu-12*:Ubuntu-13*:Ubuntu-14*:Ubuntu-16*:Ubuntu-17*
  gather_facts: false
  tasks:
    - name: group hosts for supported distributions
      group_by: key="supported"

- hosts: "!supported"
  gather_facts: false
  tasks:
    - name: fail for unsupported distribution
      fail: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}
                 is not a supported OS for a Tower installation.  Supported
                 OSes include Red Hat Enterprise Linux 5/6/7, CentOS 6/7, or
                 Ubuntu 12.04/13.04/14.04/16.04/17.04."
    - debug: msg="Version {{ ansible_distribution }} {{ ansible_distribution_version }} {{ ansible_architecture }}"

- hosts: localhost
  tasks:
    - name: Install Ansible-Galaxy dependencies
      shell: ansible-galaxy install -r requirements.yml -p ./roles/ --ignore-errors
      #shell: ansible-galaxy install -r requirements.yml -p ./roles/ --ignore-errors --force

#Below is too make sure we can ssh all required hosts
- name: determine ssh port
  hosts: all
  gather_facts: false

  vars:
    custom_ssh_port: 23

  tasks:
    - name: test default ssh port
      local_action: wait_for port=22 timeout=5 host={{inventory_hostname}}
      register: default_ssh
      ignore_errors: true
    - name: set ansible_ssh_port to default
      set_fact: ansible_ssh_port=22
      when: default_ssh.elapsed < 5
    - name: test ssh on high port
      local_action: wait_for port={{custom_ssh_port}} timeout=5 host={{inventory_hostname}}
      register: high_ssh
      when: default_ssh.elapsed >= 5
      ignore_errors: true
    - name: set ansible_ssh_port high
      set_fact: ansible_ssh_port={{custom_ssh_port}}
      when: default_ssh.elapsed >= 5 and high_ssh.elapsed < 5

#TODO ansible myhost --sudo -m raw -a "yum install -y python2 python-simplejson"

- name: Bootstrap python onto server
  hosts: Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
#  become: yes

  pre_tasks:
  - name: Install python 2 if not there
    raw: |
      test -e /usr/bin/python || \
      (apt -y update && apt install -y python-simplejson)
    register: output
    changed_when: output.stdout|trim() != ""

  - name: Install sudo if not there
    become: yes
    raw: |
      test -e /usr/bin/sudo || apt install -y sudo
    register: output
    changed_when: output.stdout|trim() != ""

- name: Add repo configuration to all nodes
  hosts: RedHat-7*:RedHat-6*:CentOS-7*:CentOS-6*
  become: yes

  roles:
    - geerlingguy.repo-epel
    - geerlingguy.repo-remi

- name: Apply hostname configuration
  hosts: jenkins-slaves
  become: yes

  roles:
    - alban.andrieu.hostname

- name: Install git
  hosts: jenkins-slaves
  remote_user: root

  roles:
    - role: geerlingguy.git

#- name: Install subversion
#  hosts: jenkins-slaves
#  remote_user: root
##  connection: local
#
#  roles:
#    - role: alban.andrieu.subversion
#
#  vars:
#      subversion_rabbitvcs_enabled: no
#      subversion_diff_enabled: no

- name: Apply common configuration to all jenkins slaves
#  hosts: test-boxes
  hosts: jenkins-slaves
#  sudo: yes
#  user: vagrant
  remote_user: albandri
  connection: local
#  remote_user: vagrant

  roles:
    - alban.andrieu.jenkins-slave

  vars:
    docker_files_enable: no
    #docker_files_generated_directory: "../roles/alban.andrieu.jenkins-slave"
    #NOK nodejs_version: "0.12.7"
    shell_git:
      # Additional properties: 'shell_git_machine, shell_git_login, shell_git_email, shell_git_password, shell_git_name, shell_git_path, shell_git_ssl'.
       - {
         shell_git_machine: '82.231.208.223',
         shell_git_login: 'AlbanAndrieu',
         shell_git_email: 'alban.andrieu@free.fr',
         shell_git_password: 'microsoft',
         # Optional.
         shell_git_name: 'Andrieu, Alban',
         shell_git_path: '/usr/bin',
         shell_git_ssl: false
       }
    jenkins_http_port: 8380
    jenkins_prefix: "/jenkins"
    jenkins_home: "/home/jenkins"
    jenkins_group: docker
    jenkins_url: http://localhost:8380{{ jenkins_prefix }}
    home_url: "http://home.nabla.mobi"
    nexus_url: "{{ home_url }}:8081"
    bower_url: "http://home.nabla.mobi:5678"
    #npm_nexus_npm_url: "{{ nexus_url }}/maven/content/groups/npmjs-all/"
    npm_phantomjs_cdnurl: "{{ home_url }}:7070/download/phantomjs"
    jenkins_ssh_key_file: "~/.ssh/id_rsa"
    jenkins_ssh_authorized_keys_fingerprints:   # Set known authorized keys for ssh
    # Alban Andrieu
      - "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAio3SOQ9yeK6QfKqSFNKyTasuzjStxWevG1Vz1wgJIxPF+KB0XoMAPD081J+Bzj2LCDRSWisNv2L4xv2jbFxW/Pl7NEakoX47eNx3U+Dxaf+szeWBTryYcDUGkduLV7G8Qncm0luIFd+HDIe/Qir1E2f56Qu2uuBNE6Tz5TFt1vc= Alban"
    jenkins_ssh_fingerprints: # Set known hosts for ssh
      - "bitbucket.org,131.103.20.167 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw=="
      - "github.com,204.232.175.90 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ=="
      - "[scm-git-eur.misys.global.ad]:7999,[10.21.200.140]:7999 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCP8ZkWwD/REuQ+jYwWGKANklOidkkmgbHDlJbQQkjVSW2iLnuldYcvLfqcu3HNfSBfJ7YH+iyeZKUDYw2kGgXymbVENTaBCfOCu/ztrnHWUn7zUFCWP12WxgzNQ7InVN+YCayaBNbwfXNt1w3/I/sWCyqaUKAQ/waPe6QUAGWPHg2fGctGMfhi6HbFk9LG5LG8luwVxvmFfhmXEsIILdH1jasOMctzCiMvttpHxY2gKMVX4OJ/Pt8TB7EhPmXDxu3WEBkqyulcQydBb3GpV6QOX5BWWaJxw9WnLRaCXFKMQOBLgx5tQcbaDmsbDk5dWgQeUcHCXRCks+8p329iCHAl"
    #jenkins_jdk7_enable: yes
    #user: "albandri"
    #home: "/workspace/users/albandri10"

#- name: Apply swarm configuration to all jenkins slaves
#  hosts: test-boxes
#  sudo: yes
#  remote_user: vagrant
#  connection: local
##  remote_user: vagrant
#
#  vars_prompt:
#  - name: jenkins_username
#    prompt: "What is your jenkins user?"
#    private: no
#  - name: jenkins_password
#    prompt: "What is your jenkins password?"
#    private: yes
#
#  roles:
#    - alban.andrieu.jenkins-swarm
#
#  vars:
#    jenkins_home: "/jenkins"

- name: Install xvbf
#  hosts: test-boxes
  hosts: jenkins-slaves
  remote_user: root
#  connection: local

  roles:
    - alban.andrieu.xvbf
