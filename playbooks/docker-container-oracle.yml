#ansible-playbook -i staging -c local -v docker-container.yml --ask-pass -vvvv | tee setup.log
#ansible-playbook -i staging -c local -v docker-container.yml --limit albandri --ask-sudo-pass -vvvv | tee setup.log

- hosts: all
  gather_facts: true
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"

- hosts: RedHat-7*:RedHat-6*:RedHat-5*:CentOS-7*:CentOS-6*:Ubuntu-17*:Ubuntu-16*:Ubuntu-14*:Ubuntu-13*:Ubuntu-12*
  gather_facts: false
  tasks:
    - name: group hosts for supported distributions
      group_by: key="supported"

- hosts: "!supported"
  gather_facts: false
  tasks:
    - name: fail for unsupported distribution
      fail: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}
                 is not a supported OS for a Tower installation.  Supported
                 OSes include Red Hat Enterprise Linux 6/7, CentOS 6/7, or
                 Ubuntu 12.04/13.04/14.04/16.04/17.04."
    - debug: msg="Version {{ ansible_distribution }} {{ ansible_distribution_version }} {{ ansible_architecture }}"

#sudo docker logout https://docker.misys.global.ad:5000
#sudo docker login registry.misys.global.ad:443
- hosts: docker-container-oracle
#  become: yes

  tasks:
    - name: Log into private registry
      docker_login:
        registry: https://docker.nabla.mobi/
        username: nabla
        password: microsoft
        state: present
        debug: true
        #reauthorize: yes
#        ignore_errors: true


#See https://docs.ansible.com/ansible/docker_service_module.html
#    - name: Stop all containers
#      docker_service:
#        project_src: "{{ lookup('env','WORKSPACE') }}/dockerfile-nabla/centos"
#        files: docker-compose.yml
#        build: no
#        recreate: never
#        restarted: no
#        project_name: "TEST"
#        remove_images: local
#        remove_orphans: true
#        remove_volumes: true
#        state: absent
#        stopped: yes
##        pull: true
##        timeout: 120
#        debug: true
#      register: output
##      ignore_errors: true
#
#    - debug: var=output

- hosts: docker-container-oracle
#  become: yes

  tasks:
    - name: Create a data container
      docker_container:
        name: mydata
        image: busybox
        volumes:
          - /data

#docker run --name database-enterprise -p 1521:1521 -p 5500:5500 -v /opt/oracle/scripts/startup store/oracle/database-enterprise:12.2.0.1
#docker exec -ti database-enterprise /bin/bash

    - name: Run the database-enterprise container
      docker_container:
          name: database-enterprise
          image: registry.misys.global.ad/misys-common/oracle-database:12.1.0.2
          #restart_policy: always
          state: started
          recreate: false
          ports:
            - "1521:1521"
            - "5500:5500"
          #prd direct access
            - "5501:5501"
#          exposed_ports:
#            - 1521
#            - 5500
#          #prd direct access
#            - 5500
          volumes_from:
            - mydata
          #detach: True
          #use_tls: encrypt
          env: ORACLE_SID=ARC1
          #     ORACLE_PWD=Almonde01$
          volumes:
            - "/opt/oracle/oradata:/opt/oracle/oradata"
            - "/opt/oracle/scripts/startup"
          #working_dir:
          #-v [<host mount point>:]/opt/oracle/oradata \
          #ports:
          #  - "{{ misysboard_port }}:8080"

    - name: sleep for 300 seconds (5 minutes) and continue with play
      wait_for: timeout=300
#      delegate_to: localhost

    - name: "Check the status of Oracle Enterprise Manager Express UI"
      command: curl --insecure https://localhost:5500/em/
      register: curl_result

    - name: "Ensure that proper data is present in stdout"
      assert:
        that:
          - "'Oracle XML DB/Oracle Database' in curl_result.stdout"
#      ignore_errors: true

    - name: Wait 300 seconds for port 1521 to become open on the host, don't start checking for 10 seconds
      wait_for:
        port: 1521
        timeout: 300
        delay: 10

#TODO
#    - name: "Check the status of sqlplus"
#      command: sqlplus sys/Almonde01\$@//localhost:1521/ARC1 as sysdba
#      register: sqlplus_result

#sqlplus sys/Almonde01\$@//10.21.188.31:1521/ARC1 as sysdba
